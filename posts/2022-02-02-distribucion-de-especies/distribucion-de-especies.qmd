---
title: "Distribucion de Especies"
description: |
  A short description of the post.
author:
  - name: Manuel Spínola
    url: http://www.icomvis.una.ac.cr/index.php/manuel
    affiliation: ICOMVIS - UNA
    affiliation_url: http://www.icomvis.una.ac.cr/
    orcid: 0000-0002-7839-1908
date: 2022/02/02
draft: true
citation: true
categories:
  - "Distribución de Especies"
---

```{r}
#| message: false
#| warning: false
#| include: false
library(tidyverse)
library(rio)
library(spocc)
library(rgbif)
library(rinat)
library(scrubr)
library(mapr)
library(sf)
library(stars)
library(raster)
library(rasterVis)
library(dismo)
library(SDMtune)
library(zeallot)
library(plotROC)
library(ggstance)
library(rnaturalearth)
library(rnaturalearthdata)
library(rmapshaper)
library(rfUtilities)
library(randomForestSRC)
library(randomForest)
library(ranger)
library(Metrics)
library(yardstick)
library(rsample)
```

# Pasos a seguir

### Definir área de estudio

```{r, include=FALSE}
na <- ne_countries(continent = "north america", scale = 10, returnclass = "sf")
```

```{r, include=FALSE}
ca <- na |> dplyr::filter(iso_a3 %in% c("CRI", "PAN", "NIC", "GTM", "BLZ", "SLV", "HND"))
```

```{r}
plot(ca["iso_a3"])
```

```{r, echo=FALSE}
ggplot(ca) +
  geom_sf(aes(fill = iso_a3))
```

```{r, include=FALSE}
ca <- ms_filter_islands(ca, min_area = 1000000000)
```

```{r, echo=FALSE}
ggplot(ca) +
  geom_sf()
```

```{r}
ca_dissolved <- st_union(ca)
```

```{r}
plot(ca_dissolved)
```

### Búsqueda de registros

```{r, include=FALSE}
aa <- occ_search(scientificName = "Amazona auropalliata", hasCoordinate = TRUE, limit = 10000)
```

```{r, include=FALSE}
aa_df <- aa$data
```

```{r, include=FALSE}
aa_df <- aa_df |>
  dplyr::select(decimalLongitude, decimalLatitude, scientificName, country)
```

```{r, include=FALSE}
aa_df <- dedup(aa_df)
```

```{r, include=FALSE}
aa_sf <- st_as_sf(aa_df, coords = c("decimalLongitude", "decimalLatitude"), crs = 4326)
```

```{r}
aa_sf
```

```{r, include=FALSE}
aa_ca_sf <- st_filter(aa_sf, ca_dissolved, .predicate = st_intersects)
```

```{r, echo=FALSE}
ggplot() +
  theme_bw() +
  geom_sf(data = ca) +
  geom_sf(data = aa_ca_sf) +
  ggtitle("Número de registros = 29")
```

```{r, include=FALSE}
# transformar a objeto sp
aa_ca_sp <- as(aa_ca_sf, "Spatial")
```

### Variables explicativas

```{r, include=FALSE}
bio_01 <- getData('worldclim', var = 'bio', res = 0.5, lon = - 89, lat = 14)
```

```{r, include=FALSE}
bio_02 <- getData('worldclim', var = 'bio', res = 0.5, lon = - 100, lat = 23)
```

```{r}
bio <- merge(bio_01, bio_02)
```

```{r}
plot(bio)
```

```{r}
alt_01 <- getData("worldclim", var = "alt", res = 0.5, lon = - 89, lat = 14)
```

```{r}
alt_02 <- getData("worldclim", var = "alt", res = 0.5, lon = - 100, lat = 23)
```

```{r}
alt <- merge(alt_01, alt_02)
```

```{r}
plot(alt)
```

```{r}
bio <- stack(bio, alt)
```

```{r}
bio_c <- crop(bio, ca)
```

```{r}
bio_ca <- mask(bio_c, ca)
```

```{r}
plot(bio_ca)
```

# Balanced random forest (Valavi et al 2021)

### Datos de presencia y background

```{r}
# datos presencia
presencia <- st_coordinates(aa_ca_sf) |>
  as.data.frame() |>
  rename(x = X, y = Y)
```

```{r}
# localizaciones de background (pseudo-absences)
background <- randomPoints(bio_ca$layer.1, 12500, p = aa_ca_sp, excludep = TRUE) |>
  as.data.frame()
```

```{r, include=FALSE}
todos <- bind_rows(presencia, background)
```

```{r, include=FALSE}
data_todos <- extract(bio_ca, todos)
```

```{r, include=FALSE}
data_todos <- data.frame(data_todos) |>
  mutate(pa = c(rep(1, nrow(presencia)), rep(0, nrow(background)))) |>
  relocate(pa)
```

```{r, include=FALSE}
data_todos <- data_todos |>
  mutate(pa = as_factor(pa)) |>
  mutate(pa = fct_recode(pa, no = "0", si = "1"))
```

```{r, include=TRUE}
data_todos <- drop_na(data_todos)
```

```{r}
summary(data_todos)
```

### package randomForest

```{r, include=FALSE}
rf_b <- randomForest(pa ~ .,
                     data = data_todos,
                     ntree = 1000,
                     sampsize = c(158,158),
                     replace = TRUE,
                     importance=TRUE)
```

```{r}
rf_b
```

```{r, include=FALSE}
rf_b_importance <- randomForest::importance(rf_b)
```

```{r, include=FALSE}
rf_b_df <- data.frame(rf_b_importance) |>
  rownames_to_column(var = "Variable")
rf_b_df
```

```{r, echo=FALSE}
ggplot(rf_b_df, aes(MeanDecreaseAccuracy, reorder(Variable, +MeanDecreaseAccuracy))) +
  theme_minimal() +
  geom_colh(width = 0.06) +
  geom_point(size = 2) +
  ylab("Variable") +
  xlab("Disminución en Exactitud")
```

```{r, include=FALSE}
raster_rf <- predict(bio_ca, rf_b, type = "prob", index = 2)
```

```{r, include=FALSE}
raster_rf
```

```{r, echo=FALSE}
plot(raster_rf)
```

```{r, echo=FALSE}
gplot(raster_rf) +
  theme_minimal() +
  geom_tile(aes(fill = value)) +
  scale_fill_viridis_c(name = "Probabilidad", na.value = "transparent", option = "B", direction = -1) +
  coord_equal()
```

```{r}
stars_rf <- st_as_stars(raster_rf)
```

```{r}
ggplot() +
  theme_minimal() +
  geom_stars(data = stars_rf) +
  geom_sf(data = ca, fill = NA) +
  scale_fill_viridis_c(name = "Probabilidad", na.value = "transparent", option = "B", direction = -1)
```

```{r}
stars_rf
```

```{r, include=FALSE}
y_pred <- predict(rf_b)
```

```{r, include=FALSE}
multi_metric <- metric_set(accuracy, kap, f_meas)
```

```{r}
multi_metric(data_todos, data_todos$pa, estimate = y_pred)
```
