---
title: "Untitled"
format:
  html:
    embed-resources: true
---

```{r}
#| message: false
#| warning: false
library(tidyverse)
library(rio)
library(sf)
library(stars)
library(raster)
library(rasterVis)
library(terra)
library(tidyterra)
library(rnaturalearth)
library(rmapshaper)
library(exactextractr)
library(landscapemetrics)
library(motif)
library(supercells)
library(arcpullr)
library(basemaps)
library(rayshader)
library(elevatr)
library(here)
library(treemapify)
library(ggthemes)
library(scales)
```

```{r}
na <- ne_countries(continent = "north america", scale = 10, returnclass = "sf")
```

```{r}
cr <- na |> dplyr::filter(iso_a3 == "CRI")
```

```{r}
cr <- ms_filter_islands(cr, min_area = 1000000000)
```

```{r}
cr_5367 <- st_transform(cr, crs = 5367)
```

```{r}
st_write(here("vectors/cr_5367.gpkg"))
```


```{r}
cr_r <- rast(here("rasters/lulc_cr_categorical_5367.tif"))
```


```{r}
ggplot() +
  theme_minimal() +
  geom_spatraster(data = cr_r, na.rm = TRUE) +
  scale_fill_manual(name = "Tipo de cobertura", values = c("darkgreen", "orange", "yellow", "magenta", "red", "grey", "blue", "#0096A0",  "#00CF75"), na.value = "transparent", na.translate = FALSE)
```

```{r}
area <- freq(cr_r)
```

```{r}
area_table <- area |>
  mutate(ha = (count * 100)/1000000,
         p = round(ha/sum(ha), 2),
         porc = percent(p, accuracy = 0.01))
```

```{r}
area_table
```

```{r}
export(area_table, here("data/area_table.xlsx"))
```


```{r}
area_table |>
  summarise(s = sum(ha))
```

```{r}
ca <- cr_r == 10
ma <- cr_r == 20
pa <- cr_r == 30
cu <- cr_r == 40
ze <- cr_r == 50
sd <- cr_r == 60
ni <- cr_r == 70
ap <- cr_r == 80
hh <- cr_r == 90
mg <- cr_r == 95
```

```{r}
ca <- as.factor(ca)
pa <- as.factor(pa)
cu <- as.factor(cu)
ze <- as.factor(ze)
hh <- as.factor(hh)
mg <- as.factor(mg)
```

```{r}
cls <- data.frame(id = 1:2, cover = c("0", "1"))
```


```{r}
levels(ca) <- cls
levels(pa) <- cls
levels(cu) <- cls
levels(ze) <- cls
levels(hh) <- cls
levels(mg) <- cls
```

```{r}
writeRaster(ca, here("rasters/ca.tif"), overwrite = TRUE, gdal = c("COMPRESS=LZW"))
writeRaster(pa, here("rasters/pa.tif"), overwrite = TRUE, gdal = c("COMPRESS=LZW"))
writeRaster(cu, here("rasters/cu.tif"), overwrite = TRUE, gdal = c("COMPRESS=LZW"))
writeRaster(ze, here("rasters/ze.tif"), overwrite = TRUE, gdal = c("COMPRESS=LZW"))
writeRaster(hh, here("rasters/hh.tif"), overwrite = TRUE, gdal = c("COMPRESS=LZW"))
writeRaster(mg, here("rasters/mg.tif"), overwrite = TRUE, gdal = c("COMPRESS=LZW"))
```

```{r}
ggplot(area_table, aes(area = p, fill = value, label = paste(value, porc,sep = "\n"))) +
  geom_treemap() +
  geom_treemap_text(grow = F,
                    reflow = T,
                    colour = "black", 
                    place = "centre",
                    size = 10) +
  scale_fill_tableau()
```

```{r}
ggsave(here("plots/treemap.png"))
```


```{r}
comp_output = lsp_signature(cr_r, type = "composition", window = 20, normalization = "pdf", ordered = FALSE)
```

```{r}
comp_output = lsp_restructure(comp_output)
```

```{r}
comp_output = lsp_add_terra(comp_output)
```

```{r}
comp_output
```

```{r}
comp_output2 = subset(comp_output, 3:12)
plot(comp_output2)
```

```{r}
slic = supercells(comp_output2, k = 2000, compactness = 0.1, dist_fun = "jsd")
```

```{r}
slic
```

```{r}
st_write(slic, here("vectors/supercell.gpkg"))
```

```{r}
plot(cr_r, reset = FALSE)
plot(st_geometry(slic), add = TRUE, border = "red")
```

```{r}
ggplot() +
  dark_theme_minimal() +
  geom_spatraster(data = cr_r, na.rm = TRUE) +
  scale_fill_manual(name = "Tipo de cobertura", values = c("darkgreen", "orange", "yellow", "magenta", "red", "grey", "blue", "#0096A0",  "#00CF75"), na.value = "transparent", na.translate = FALSE) +
  geom_sf(data = slic, alpha = 0, color = "white")
```
